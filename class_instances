import os

from collections import Counter

try:
    CUR = os.path.dirname(os.path.abspath(__file__))
except NameError:
    CUR = os.getcwd()

def count_classes_from_file_list(ids_file_path, directory_path):
    class_counts = Counter()  # To store the count of each class
    
    # Read the list of file names (IDs) from the provided file
    with open(ids_file_path, 'r') as f:
        file_ids = f.read().splitlines()  # Read each line as a separate file ID
    
    # Process each file ID
    for file_id in file_ids:
        file_path = os.path.join(directory_path, f'{file_id}.txt')
        
        if os.path.exists(file_path):  # Check if the file exists
            with open(file_path, 'r') as f:
                lines = f.readlines()  # Read all lines in the file

                for line in lines:
                    # The first word in each line is the class label
                    class_label = line.split()[0]  # Assuming the class is the first word
                    class_counts[class_label] += 1  # Increment the count for this class
        else:
            print(f"File {file_path} does not exist. Skipping.")
    return class_counts

# Example: Path to the file containing all the IDs (filenames)

ids_file_path = "/home/student2/Documents/Datasets/View_of_Delft_dataset_PUBLIC/PointPillars-main_dup/Ids_shortened.txt"

# Example: Path to the directory containing all the .txt files
directory_path = "/home/student2/Documents/Datasets/View_of_Delft_dataset_PUBLIC/view_of_delft_PUBLIC/radar/training/label_2"

# Get class counts
class_counts = count_classes_from_file_list(ids_file_path, directory_path)

# Print the class counts
print("Class Counts:", class_counts)